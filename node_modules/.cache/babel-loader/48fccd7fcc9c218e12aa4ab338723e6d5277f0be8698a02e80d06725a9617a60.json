{"ast":null,"code":"import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport database from \"../firebase\";\nconst agencyCollectionRef = collection(database, 'Agency');\nexport const getAllAgents = async () => {\n  try {\n    const querySnapshot = await getDocs(agencyCollectionRef);\n    const agents = querySnapshot.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n    return agents;\n  } catch (error) {\n    // Handle error\n    console.error('Error getting agents:', error);\n    throw error;\n  }\n};\nexport const createAgency = async data => {\n  try {\n    // const newAgent = await database.collection('Agency').doc(data.name)\n    // return newAgent.setDoc(data)\n    data.push({\n      'id': Date.now()\n    });\n    await setDoc(doc(agencyCollectionRef, data.id), data);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAgency = async agencyID => {\n  try {\n    await deleteDoc(doc(agencyCollectionRef, agencyID));\n    return true;\n  } catch (error) {}\n};","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","deleteDoc","getDoc","doc","setDoc","database","agencyCollectionRef","getAllAgents","querySnapshot","agents","docs","map","data","id","error","console","createAgency","push","Date","now","log","deleteAgency","agencyID"],"sources":["/Users/nc/Desktop/BOT/UI/src/Repositories/agencyRepos.js"],"sourcesContent":["import {collection, addDoc, getDocs,updateDoc,deleteDoc, getDoc,doc,setDoc} from \"firebase/firestore\"\nimport database from \"../firebase\"\n\nconst agencyCollectionRef = collection(database,'Agency')\n\nexport const getAllAgents = async () => {\n  try {\n    const querySnapshot = await getDocs(agencyCollectionRef);\n    const agents = querySnapshot.docs.map((doc) => ({\n      ...doc.data(),\n      id: doc.id,\n    }));\n    return agents;\n  } catch (error) {\n    // Handle error\n    console.error('Error getting agents:', error);\n    throw error;\n  }\n};\n\nexport const createAgency = async(data) =>{\n    try{\n        // const newAgent = await database.collection('Agency').doc(data.name)\n        // return newAgent.setDoc(data)\n        data.push({'id':Date.now()})\n        await setDoc(doc(agencyCollectionRef,data.id),data)\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const deleteAgency = async(agencyID) =>{\n    try{\n        await deleteDoc(doc(agencyCollectionRef,agencyID))\n        return true\n    }catch(error){}\n}\n"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAACC,SAAS,EAACC,SAAS,EAAEC,MAAM,EAACC,GAAG,EAACC,MAAM,QAAO,oBAAoB;AACrG,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,mBAAmB,GAAGT,UAAU,CAACQ,QAAQ,EAAC,QAAQ,CAAC;AAEzD,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,aAAa,GAAG,MAAMT,OAAO,CAACO,mBAAmB,CAAC;IACxD,MAAMG,MAAM,GAAGD,aAAa,CAACE,IAAI,CAACC,GAAG,CAAER,GAAG,KAAM;MAC9C,GAAGA,GAAG,CAACS,IAAI,CAAC,CAAC;MACbC,EAAE,EAAEV,GAAG,CAACU;IACV,CAAC,CAAC,CAAC;IACH,OAAOJ,MAAM;EACf,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd;IACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAMJ,IAAI,IAAI;EACtC,IAAG;IACC;IACA;IACAA,IAAI,CAACK,IAAI,CAAC;MAAC,IAAI,EAACC,IAAI,CAACC,GAAG,CAAC;IAAC,CAAC,CAAC;IAC5B,MAAMf,MAAM,CAACD,GAAG,CAACG,mBAAmB,EAACM,IAAI,CAACC,EAAE,CAAC,EAACD,IAAI,CAAC;EACvD,CAAC,QAAME,KAAK,EAAC;IACTC,OAAO,CAACK,GAAG,CAACN,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAMC,QAAQ,IAAI;EAC1C,IAAG;IACC,MAAMrB,SAAS,CAACE,GAAG,CAACG,mBAAmB,EAACgB,QAAQ,CAAC,CAAC;IAClD,OAAO,IAAI;EACf,CAAC,QAAMR,KAAK,EAAC,CAAC;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}