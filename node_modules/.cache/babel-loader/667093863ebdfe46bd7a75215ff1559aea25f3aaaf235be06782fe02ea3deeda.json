{"ast":null,"code":"import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport database from \"../firebase\";\nconst generateID = () => {\n  // program to generate random strings\n\n  const result = Math.random().toString(36).substring(2, 7);\n  const id = 'PC_' + result;\n  return id;\n};\nconst agencyRef = agencyID => {\n  return doc(database, 'Agency', agencyID);\n};\nexport const createDevice = async (agencyID, deviceData) => {\n  try {\n    const agencyRef = doc(database, 'Agency', agencyID);\n    const deviceCollectionRef = collection(agencyRef, 'devices');\n    const deviceID = generateID();\n    const newData = {\n      ...deviceData,\n      device_id: deviceID\n    };\n    await addDoc(deviceCollectionRef, newData);\n    return true;\n  } catch (error) {}\n};\nexport const retrieveDevice = async (agencyID, deviceID) => {\n  try {\n    const deviceRef = doc(collection(database, 'Agency', agencyID, 'devices'), deviceID);\n    const deviceDoc = await getDoc(deviceRef);\n    if (deviceDoc.exists()) {\n      const deviceData = deviceDoc.data();\n      return {\n        id: deviceData,\n        ...deviceData\n      };\n    } else {\n      throw new Error(\"Device not found\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","deleteDoc","getDoc","doc","setDoc","database","generateID","result","Math","random","toString","substring","id","agencyRef","agencyID","createDevice","deviceData","deviceCollectionRef","deviceID","newData","device_id","error","retrieveDevice","deviceRef","deviceDoc","exists","data","Error","console","log"],"sources":["/Users/nc/Desktop/BOT/UI/src/Repositories/deviceRepos.js"],"sourcesContent":["import {collection, addDoc, getDocs,updateDoc,deleteDoc, getDoc,doc,setDoc} from \"firebase/firestore\"\nimport database from \"../firebase\"\n\nconst generateID = () =>{\n    // program to generate random strings\n\n    const result = Math.random().toString(36).substring(2,7);\n    const id = 'PC_'+result\n    return id\n\n}\n\nconst agencyRef = (agencyID) =>{\n    return doc(database,'Agency',agencyID)\n\n}\n\nexport const createDevice = async(agencyID,deviceData) =>{\n    try{\n        const agencyRef = doc(database,'Agency',agencyID)\n        const deviceCollectionRef = collection(agencyRef,'devices')\n        const deviceID = generateID()\n        const newData = {...deviceData,device_id:deviceID}\n        await addDoc(deviceCollectionRef,newData)\n        return true\n    }\n    catch(error){\n    \n    }\n}\n\nexport const retrieveDevice = async(agencyID,deviceID) =>{\n    try{\n        const deviceRef = doc(collection(database,'Agency',agencyID,'devices'),deviceID)\n        const deviceDoc = await getDoc(deviceRef)\n\n        if(deviceDoc.exists()){\n            const deviceData = deviceDoc.data();\n            return {id:deviceData,...deviceData}\n        }\n        else{\n            throw new Error(\"Device not found\")\n        }\n\n    }catch(error){\n        console.log(error)\n    }\n}"],"mappings":"AAAA,SAAQA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAACC,SAAS,EAACC,SAAS,EAAEC,MAAM,EAACC,GAAG,EAACC,MAAM,QAAO,oBAAoB;AACrG,OAAOC,QAAQ,MAAM,aAAa;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAK;EACpB;;EAEA,MAAMC,MAAM,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC;EACxD,MAAMC,EAAE,GAAG,KAAK,GAACL,MAAM;EACvB,OAAOK,EAAE;AAEb,CAAC;AAED,MAAMC,SAAS,GAAIC,QAAQ,IAAI;EAC3B,OAAOX,GAAG,CAACE,QAAQ,EAAC,QAAQ,EAACS,QAAQ,CAAC;AAE1C,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAMD,QAAQ,EAACE,UAAU,KAAI;EACrD,IAAG;IACC,MAAMH,SAAS,GAAGV,GAAG,CAACE,QAAQ,EAAC,QAAQ,EAACS,QAAQ,CAAC;IACjD,MAAMG,mBAAmB,GAAGpB,UAAU,CAACgB,SAAS,EAAC,SAAS,CAAC;IAC3D,MAAMK,QAAQ,GAAGZ,UAAU,CAAC,CAAC;IAC7B,MAAMa,OAAO,GAAG;MAAC,GAAGH,UAAU;MAACI,SAAS,EAACF;IAAQ,CAAC;IAClD,MAAMpB,MAAM,CAACmB,mBAAmB,EAACE,OAAO,CAAC;IACzC,OAAO,IAAI;EACf,CAAC,CACD,OAAME,KAAK,EAAC,CAEZ;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAMR,QAAQ,EAACI,QAAQ,KAAI;EACrD,IAAG;IACC,MAAMK,SAAS,GAAGpB,GAAG,CAACN,UAAU,CAACQ,QAAQ,EAAC,QAAQ,EAACS,QAAQ,EAAC,SAAS,CAAC,EAACI,QAAQ,CAAC;IAChF,MAAMM,SAAS,GAAG,MAAMtB,MAAM,CAACqB,SAAS,CAAC;IAEzC,IAAGC,SAAS,CAACC,MAAM,CAAC,CAAC,EAAC;MAClB,MAAMT,UAAU,GAAGQ,SAAS,CAACE,IAAI,CAAC,CAAC;MACnC,OAAO;QAACd,EAAE,EAACI,UAAU;QAAC,GAAGA;MAAU,CAAC;IACxC,CAAC,MACG;MACA,MAAM,IAAIW,KAAK,CAAC,kBAAkB,CAAC;IACvC;EAEJ,CAAC,QAAMN,KAAK,EAAC;IACTO,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}