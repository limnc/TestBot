{"ast":null,"code":"// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  EvaluateResultType,\n  EvaluateResultSuccess,\n  EvaluateResultException,\n  ExceptionDetails\n} = require('./evaluateResult');\nconst {\n  RealmInfo\n} = require('./realmInfo');\nconst {\n  RemoteValue\n} = require('./protocolValue');\nclass ScriptManager {\n  constructor(driver) {\n    this._driver = driver;\n  }\n  async init(browsingContextId) {\n    if (!(await this._driver.getCapabilities()).get('webSocketUrl')) {\n      throw Error('WebDriver instance must support BiDi protocol');\n    }\n    this.bidi = await this._driver.getBidi();\n    this._browsingContextId = browsingContextId;\n  }\n  async disownRealmScript(realmId, handles) {\n    const params = {\n      method: 'script.disown',\n      params: {\n        handles: handles,\n        target: {\n          realm: realmId\n        }\n      }\n    };\n    await this.bidi.send(params);\n  }\n  async disownBrowsingContextScript(browsingContextId, handles) {\n    let sandbox = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const params = {\n      method: 'script.disown',\n      params: {\n        handles: handles,\n        target: {\n          context: browsingContextId\n        }\n      }\n    };\n    if (sandbox != null) {\n      params.params.target['sandbox'] = sandbox;\n    }\n    await this.bidi.send(params);\n  }\n  async callFunctionInRealm(realmId, functionDeclaration, awaitPromise) {\n    let argumentValueList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let thisParameter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let resultOwnership = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    const params = this.getCallFunctionParams('realm', realmId, null, functionDeclaration, awaitPromise, argumentValueList, thisParameter, resultOwnership);\n    const command = {\n      method: 'script.callFunction',\n      params\n    };\n    let response = await this.bidi.send(command);\n    return this.createEvaluateResult(response);\n  }\n  async callFunctionInBrowsingContext(browsingContextId, functionDeclaration, awaitPromise) {\n    let argumentValueList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let thisParameter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    let resultOwnership = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let sandbox = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    const params = this.getCallFunctionParams('contextTarget', browsingContextId, sandbox, functionDeclaration, awaitPromise, argumentValueList, thisParameter, resultOwnership);\n    const command = {\n      method: 'script.callFunction',\n      params\n    };\n    const response = await this.bidi.send(command);\n    return this.createEvaluateResult(response);\n  }\n  async evaluateFunctionInRealm(realmId, expression, awaitPromise) {\n    let resultOwnership = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    const params = this.getEvaluateParams('realm', realmId, null, expression, awaitPromise, resultOwnership);\n    const command = {\n      method: 'script.evaluate',\n      params\n    };\n    let response = await this.bidi.send(command);\n    return this.createEvaluateResult(response);\n  }\n  async evaluateFunctionInBrowsingContext(browsingContextId, expression, awaitPromise) {\n    let resultOwnership = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    let sandbox = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n    const params = this.getEvaluateParams('contextTarget', browsingContextId, sandbox, expression, awaitPromise, resultOwnership);\n    const command = {\n      method: 'script.evaluate',\n      params\n    };\n    let response = await this.bidi.send(command);\n    return this.createEvaluateResult(response);\n  }\n  getCallFunctionParams(targetType, id, sandbox, functionDeclaration, awaitPromise) {\n    let argumentValueList = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    let thisParameter = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n    let resultOwnership = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n    const params = {\n      functionDeclaration: functionDeclaration,\n      awaitPromise: awaitPromise\n    };\n    if (targetType === 'contextTarget') {\n      if (sandbox != null) {\n        params['target'] = {\n          context: id,\n          sandbox: sandbox\n        };\n      } else {\n        params['target'] = {\n          context: id\n        };\n      }\n    } else {\n      params['target'] = {\n        realm: id\n      };\n    }\n    if (argumentValueList != null) {\n      let argumentParams = [];\n      argumentValueList.forEach(argumentValue => {\n        argumentParams.push(argumentValue.asMap());\n      });\n      params['arguments'] = argumentParams;\n    }\n    if (thisParameter != null) {\n      params['this'] = thisParameter;\n    }\n    if (resultOwnership != null) {\n      params['resultOwnership'] = resultOwnership;\n    }\n    return params;\n  }\n  getEvaluateParams(targetType, id, sandbox, expression, awaitPromise) {\n    let resultOwnership = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n    const params = {\n      expression: expression,\n      awaitPromise: awaitPromise\n    };\n    if (targetType === 'contextTarget') {\n      if (sandbox != null) {\n        params['target'] = {\n          context: id,\n          sandbox: sandbox\n        };\n      } else {\n        params['target'] = {\n          context: id\n        };\n      }\n    } else {\n      params['target'] = {\n        realm: id\n      };\n    }\n    if (resultOwnership != null) {\n      params['resultOwnership'] = resultOwnership;\n    }\n    return params;\n  }\n  createEvaluateResult(response) {\n    var type = response.result.type;\n    var realmId = response.result.realm;\n    var evaluateResult;\n    if (type === EvaluateResultType.SUCCESS) {\n      var result = response.result.result;\n      evaluateResult = new EvaluateResultSuccess(realmId, new RemoteValue(result));\n    } else {\n      var exceptionDetails = response.result.exceptionDetails;\n      evaluateResult = new EvaluateResultException(realmId, new ExceptionDetails(exceptionDetails));\n    }\n    return evaluateResult;\n  }\n  realmInfoMapper(realms) {\n    var realmsList = [];\n    realms.forEach(realm => {\n      realmsList.push(RealmInfo.fromJson(realm));\n    });\n    return realmsList;\n  }\n  async getAllRealms() {\n    const command = {\n      method: 'script.getRealms',\n      params: {}\n    };\n    let response = await this.bidi.send(command);\n    return this.realmInfoMapper(response.result.realms);\n  }\n  async getRealmsByType(type) {\n    const command = {\n      method: 'script.getRealms',\n      params: {\n        type: type\n      }\n    };\n    let response = await this.bidi.send(command);\n    return this.realmInfoMapper(response.result.realms);\n  }\n  async getRealmsInBrowsingContext(browsingContext) {\n    const command = {\n      method: 'script.getRealms',\n      params: {\n        context: browsingContext\n      }\n    };\n    let response = await this.bidi.send(command);\n    return this.realmInfoMapper(response.result.realms);\n  }\n  async getRealmsInBrowsingContextByType(browsingContext, type) {\n    const command = {\n      method: 'script.getRealms',\n      params: {\n        context: browsingContext,\n        type: type\n      }\n    };\n    let response = await this.bidi.send(command);\n    return this.realmInfoMapper(response.result.realms);\n  }\n}\nasync function getScriptManagerInstance(browsingContextId, driver) {\n  let instance = new ScriptManager(driver);\n  await instance.init(browsingContextId);\n  return instance;\n}\nmodule.exports = getScriptManagerInstance;","map":{"version":3,"names":["EvaluateResultType","EvaluateResultSuccess","EvaluateResultException","ExceptionDetails","require","RealmInfo","RemoteValue","ScriptManager","constructor","driver","_driver","init","browsingContextId","getCapabilities","get","Error","bidi","getBidi","_browsingContextId","disownRealmScript","realmId","handles","params","method","target","realm","send","disownBrowsingContextScript","sandbox","arguments","length","undefined","context","callFunctionInRealm","functionDeclaration","awaitPromise","argumentValueList","thisParameter","resultOwnership","getCallFunctionParams","command","response","createEvaluateResult","callFunctionInBrowsingContext","evaluateFunctionInRealm","expression","getEvaluateParams","evaluateFunctionInBrowsingContext","targetType","id","argumentParams","forEach","argumentValue","push","asMap","type","result","evaluateResult","SUCCESS","exceptionDetails","realmInfoMapper","realms","realmsList","fromJson","getAllRealms","getRealmsByType","getRealmsInBrowsingContext","browsingContext","getRealmsInBrowsingContextByType","getScriptManagerInstance","instance","module","exports"],"sources":["/Users/nc/Desktop/BOT/UI/node_modules/selenium-webdriver/bidi/scriptManager.js"],"sourcesContent":["// Licensed to the Software Freedom Conservancy (SFC) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The SFC licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nconst {\n  EvaluateResultType,\n  EvaluateResultSuccess,\n  EvaluateResultException,\n  ExceptionDetails,\n} = require('./evaluateResult')\nconst { RealmInfo } = require('./realmInfo')\nconst { RemoteValue } = require('./protocolValue')\n\nclass ScriptManager {\n  constructor(driver) {\n    this._driver = driver\n  }\n\n  async init(browsingContextId) {\n    if (!(await this._driver.getCapabilities()).get('webSocketUrl')) {\n      throw Error('WebDriver instance must support BiDi protocol')\n    }\n\n    this.bidi = await this._driver.getBidi()\n    this._browsingContextId = browsingContextId\n  }\n\n  async disownRealmScript(realmId, handles) {\n    const params = {\n      method: 'script.disown',\n      params: {\n        handles: handles,\n        target: {\n          realm: realmId,\n        },\n      },\n    }\n\n    await this.bidi.send(params)\n  }\n\n  async disownBrowsingContextScript(\n    browsingContextId,\n    handles,\n    sandbox = null\n  ) {\n    const params = {\n      method: 'script.disown',\n      params: {\n        handles: handles,\n        target: {\n          context: browsingContextId,\n        },\n      },\n    }\n\n    if (sandbox != null) {\n      params.params.target['sandbox'] = sandbox\n    }\n\n    await this.bidi.send(params)\n  }\n\n  async callFunctionInRealm(\n    realmId,\n    functionDeclaration,\n    awaitPromise,\n    argumentValueList = null,\n    thisParameter = null,\n    resultOwnership = null\n  ) {\n    const params = this.getCallFunctionParams(\n      'realm',\n      realmId,\n      null,\n      functionDeclaration,\n      awaitPromise,\n      argumentValueList,\n      thisParameter,\n      resultOwnership\n    )\n\n    const command = {\n      method: 'script.callFunction',\n      params,\n    }\n\n    let response = await this.bidi.send(command)\n    return this.createEvaluateResult(response)\n  }\n\n  async callFunctionInBrowsingContext(\n    browsingContextId,\n    functionDeclaration,\n    awaitPromise,\n    argumentValueList = null,\n    thisParameter = null,\n    resultOwnership = null,\n    sandbox = null\n  ) {\n    const params = this.getCallFunctionParams(\n      'contextTarget',\n      browsingContextId,\n      sandbox,\n      functionDeclaration,\n      awaitPromise,\n      argumentValueList,\n      thisParameter,\n      resultOwnership\n    )\n\n    const command = {\n      method: 'script.callFunction',\n      params,\n    }\n    const response = await this.bidi.send(command)\n    return this.createEvaluateResult(response)\n  }\n\n  async evaluateFunctionInRealm(\n    realmId,\n    expression,\n    awaitPromise,\n    resultOwnership = null\n  ) {\n    const params = this.getEvaluateParams(\n      'realm',\n      realmId,\n      null,\n      expression,\n      awaitPromise,\n      resultOwnership\n    )\n\n    const command = {\n      method: 'script.evaluate',\n      params,\n    }\n\n    let response = await this.bidi.send(command)\n    return this.createEvaluateResult(response)\n  }\n\n  async evaluateFunctionInBrowsingContext(\n    browsingContextId,\n    expression,\n    awaitPromise,\n    resultOwnership = null,\n    sandbox = null\n  ) {\n    const params = this.getEvaluateParams(\n      'contextTarget',\n      browsingContextId,\n      sandbox,\n      expression,\n      awaitPromise,\n      resultOwnership\n    )\n\n    const command = {\n      method: 'script.evaluate',\n      params,\n    }\n\n    let response = await this.bidi.send(command)\n    return this.createEvaluateResult(response)\n  }\n\n  getCallFunctionParams(\n    targetType,\n    id,\n    sandbox,\n    functionDeclaration,\n    awaitPromise,\n    argumentValueList = null,\n    thisParameter = null,\n    resultOwnership = null\n  ) {\n    const params = {\n      functionDeclaration: functionDeclaration,\n      awaitPromise: awaitPromise,\n    }\n    if (targetType === 'contextTarget') {\n      if (sandbox != null) {\n        params['target'] = { context: id, sandbox: sandbox }\n      } else {\n        params['target'] = { context: id }\n      }\n    } else {\n      params['target'] = { realm: id }\n    }\n\n    if (argumentValueList != null) {\n      let argumentParams = []\n      argumentValueList.forEach((argumentValue) => {\n        argumentParams.push(argumentValue.asMap())\n      })\n      params['arguments'] = argumentParams\n    }\n\n    if (thisParameter != null) {\n      params['this'] = thisParameter\n    }\n\n    if (resultOwnership != null) {\n      params['resultOwnership'] = resultOwnership\n    }\n\n    return params\n  }\n\n  getEvaluateParams(\n    targetType,\n    id,\n    sandbox,\n    expression,\n    awaitPromise,\n    resultOwnership = null\n  ) {\n    const params = {\n      expression: expression,\n      awaitPromise: awaitPromise,\n    }\n    if (targetType === 'contextTarget') {\n      if (sandbox != null) {\n        params['target'] = { context: id, sandbox: sandbox }\n      } else {\n        params['target'] = { context: id }\n      }\n    } else {\n      params['target'] = { realm: id }\n    }\n    if (resultOwnership != null) {\n      params['resultOwnership'] = resultOwnership\n    }\n\n    return params\n  }\n\n  createEvaluateResult(response) {\n    var type = response.result.type\n    var realmId = response.result.realm\n    var evaluateResult\n\n    if (type === EvaluateResultType.SUCCESS) {\n      var result = response.result.result\n      evaluateResult = new EvaluateResultSuccess(\n        realmId,\n        new RemoteValue(result)\n      )\n    } else {\n      var exceptionDetails = response.result.exceptionDetails\n      evaluateResult = new EvaluateResultException(\n        realmId,\n        new ExceptionDetails(exceptionDetails)\n      )\n    }\n    return evaluateResult\n  }\n\n  realmInfoMapper(realms) {\n    var realmsList = []\n    realms.forEach((realm) => {\n      realmsList.push(RealmInfo.fromJson(realm))\n    })\n    return realmsList\n  }\n\n  async getAllRealms() {\n    const command = {\n      method: 'script.getRealms',\n      params: {},\n    }\n    let response = await this.bidi.send(command)\n    return this.realmInfoMapper(response.result.realms)\n  }\n\n  async getRealmsByType(type) {\n    const command = {\n      method: 'script.getRealms',\n      params: { type: type },\n    }\n    let response = await this.bidi.send(command)\n    return this.realmInfoMapper(response.result.realms)\n  }\n\n  async getRealmsInBrowsingContext(browsingContext) {\n    const command = {\n      method: 'script.getRealms',\n      params: { context: browsingContext },\n    }\n    let response = await this.bidi.send(command)\n    return this.realmInfoMapper(response.result.realms)\n  }\n\n  async getRealmsInBrowsingContextByType(browsingContext, type) {\n    const command = {\n      method: 'script.getRealms',\n      params: { context: browsingContext, type: type },\n    }\n    let response = await this.bidi.send(command)\n    return this.realmInfoMapper(response.result.realms)\n  }\n}\n\nasync function getScriptManagerInstance(browsingContextId, driver) {\n  let instance = new ScriptManager(driver)\n  await instance.init(browsingContextId)\n  return instance\n}\n\nmodule.exports = getScriptManagerInstance\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}