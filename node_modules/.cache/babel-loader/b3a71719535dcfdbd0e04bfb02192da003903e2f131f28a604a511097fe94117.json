{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nc/Desktop/BOT/UI/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _objectSpread from\"/Users/nc/Desktop/BOT/UI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/Users/nc/Desktop/BOT/UI/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{collection,addDoc,getDocs,updateDoc,deleteDoc,getDoc,doc,setDoc}from\"firebase/firestore\";import database from\"../firebase\";var agencyCollectionRef=collection(database,'Agency');var generateAgencyId=function generateAgencyId(){// Implement your logic to generate a unique agency_id\n// You can use a library or custom logic to generate the ID\n// For example, you can use a combination of timestamp and random number\nvar timestamp=Date.now();var randomNum=Math.floor(Math.random()*10000);var agencyId=\"AG\".concat(timestamp).concat(randomNum);return agencyId;};export var getAllAgents=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var querySnapshot,agents;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return getDocs(agencyCollectionRef);case 3:querySnapshot=_context.sent;agents=querySnapshot.docs.map(function(doc){return _objectSpread(_objectSpread({},doc.data()),{},{id:doc.id});});return _context.abrupt(\"return\",agents);case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);// Handle error\nconsole.error('Error getting agents:',_context.t0);throw _context.t0;case 12:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function getAllAgents(){return _ref.apply(this,arguments);};}();export var createAgency=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(data){var agencyId,newData;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:agencyId=generateAgencyId();newData=_objectSpread(_objectSpread({},data),{},{id:agencyId});_context2.prev=2;_context2.next=5;return setDoc(doc(agencyCollectionRef,agencyId),newData);case 5:_context2.next=10;break;case 7:_context2.prev=7;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0);case 10:case\"end\":return _context2.stop();}},_callee2,null,[[2,7]]);}));return function createAgency(_x){return _ref2.apply(this,arguments);};}();export var deleteAgency=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(agentID){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return deleteDoc(doc(agencyCollectionRef,agentID));case 3:return _context3.abrupt(\"return\",true);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);case 8:case\"end\":return _context3.stop();}},_callee3,null,[[0,6]]);}));return function deleteAgency(_x2){return _ref3.apply(this,arguments);};}();export var getAgent=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(agentID){var agent;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return getDoc(doc(agencyCollectionRef,agentID));case 3:agent=_context4.sent;if(!agent.exists()){_context4.next=6;break;}return _context4.abrupt(\"return\",_objectSpread({id:agent.id},agent.data()));case 6:_context4.next=10;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);case 10:case\"end\":return _context4.stop();}},_callee4,null,[[0,8]]);}));return function getAgent(_x3){return _ref4.apply(this,arguments);};}();export var updateAgent=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(id,data){var agent;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.prev=0;agent=doc(database,\"Agency\",id);_context5.next=4;return updateDoc(agent,data);case 4:return _context5.abrupt(\"return\",true);case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);case 9:case\"end\":return _context5.stop();}},_callee5,null,[[0,7]]);}));return function updateAgent(_x4,_x5){return _ref5.apply(this,arguments);};}();export var getPassword=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(agentID){var agencyRef,agent;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:_context6.prev=0;agencyRef=doc(agencyCollectionRef,agentID);_context6.next=4;return getDoc(agencyRef);case 4:agent=_context6.sent;if(!agent.exists()){_context6.next=7;break;}return _context6.abrupt(\"return\",agent.data().password);case 7:_context6.next=11;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](0);case 11:case\"end\":return _context6.stop();}},_callee6,null,[[0,9]]);}));return function getPassword(_x6){return _ref6.apply(this,arguments);};}();","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","deleteDoc","getDoc","doc","setDoc","database","agencyCollectionRef","generateAgencyId","timestamp","Date","now","randomNum","Math","floor","random","agencyId","concat","getAllAgents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","querySnapshot","agents","wrap","_callee$","_context","prev","next","sent","docs","map","_objectSpread","data","id","abrupt","t0","console","error","stop","apply","arguments","createAgency","_ref2","_callee2","newData","_callee2$","_context2","log","_x","deleteAgency","_ref3","_callee3","agentID","_callee3$","_context3","_x2","getAgent","_ref4","_callee4","agent","_callee4$","_context4","exists","_x3","updateAgent","_ref5","_callee5","_callee5$","_context5","_x4","_x5","getPassword","_ref6","_callee6","agencyRef","_callee6$","_context6","password","_x6"],"sources":["/Users/nc/Desktop/BOT/UI/src/Repositories/agencyRepos.js"],"sourcesContent":["import {collection, addDoc, getDocs,updateDoc,deleteDoc, getDoc,doc,setDoc} from \"firebase/firestore\"\nimport database from \"../firebase\"\n\nconst agencyCollectionRef = collection(database,'Agency')\nconst generateAgencyId = () => {\n    // Implement your logic to generate a unique agency_id\n    // You can use a library or custom logic to generate the ID\n    // For example, you can use a combination of timestamp and random number\n    const timestamp = Date.now();\n    const randomNum = Math.floor(Math.random() * 10000);\n    const agencyId = `AG${timestamp}${randomNum}`;\n    return agencyId;\n  };\nexport const getAllAgents = async () => {\n  try {\n    const querySnapshot = await getDocs(agencyCollectionRef);\n    const agents = querySnapshot.docs.map((doc) => ({\n      ...doc.data(),\n      id: doc.id,\n    }));\n    return agents;\n  } catch (error) {\n    // Handle error\n    console.error('Error getting agents:', error);\n    throw error;\n  }\n};\n\nexport const createAgency = async(data) =>{\n    const agencyId = generateAgencyId();\n    const newData = {...data,id:agencyId}\n    try{\n        // const newAgent = await database.collection('Agency').doc(data.name)\n        // return newAgent.setDoc(data)\n        \n        await setDoc(doc(agencyCollectionRef,agencyId),newData)\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const deleteAgency = async(agentID) =>{\n    try{\n        await deleteDoc(doc(agencyCollectionRef,agentID))\n        return true\n    }catch(error){}\n}\n\nexport const getAgent = async(agentID) =>{\n    try{\n        const agent = await getDoc(doc(agencyCollectionRef,agentID))\n        if(agent.exists()){\n           \n            return {id:agent.id,...agent.data()}\n        }\n    }\n    catch(error){\n    \n    }\n}\n\nexport const updateAgent = async(id,data)=>{\n\n    try{\n        const agent = doc(database,\"Agency\",id)\n        await updateDoc(agent,data)\n        return true\n    }catch(error){\n    \n    }\n}\n\nexport const getPassword = async(agentID)=>{\n    try{\n        const agencyRef = doc(agencyCollectionRef,agentID)\n        const agent = await getDoc(agencyRef)\n        if(agent.exists()){\n            return agent.data().password\n        }\n    }\n    catch(error){\n    \n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}