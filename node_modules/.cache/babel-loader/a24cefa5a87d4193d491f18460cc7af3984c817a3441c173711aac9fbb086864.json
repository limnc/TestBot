{"ast":null,"code":"var _jsxFileName = \"/Users/nc/Desktop/BOT/UI/src/Pages/selectDevice.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { getDevices } from \"../Repositories/deviceRepos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceList = _ref => {\n  _s();\n  let {\n    agent,\n    onSelectedDevicesChange\n  } = _ref;\n  const [devices, setDevices] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [message, setMessage] = useState('');\n  const fetchDevices = async () => {\n    // try {\n    //     await axios.get('http://127.0.0.1:5000/getAllDevices').then(response => {\n    //         if (response.data.status === 200) {\n    //             const device = response.data.devices;\n    //             const devicesArray = Object.keys(device).map((key) => ({\n    //                 name: key,\n    //                 ...device[key],\n    //             }));\n    //             setDevices(devicesArray);\n    //         }\n    //     })\n    // }\n    // catch (error) {\n    //     setMessage('Cannot connect to server')\n    //     setErrors(error)\n    // }\n\n    const this_devices = await getDevices(agent);\n    setDevices(this_devices);\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  const [selectedDevices, setSelectedDevices] = useState([]);\n  const handleSelect = (deviceName, deviceIP) => event => {\n    const isChecked = event.target.checked;\n\n    // setSelectedDevices((prevSelectedDevices) => {\n    //     if (isChecked) {\n    //         // Add the selected device to the selectedDevice state\n    //         return [...prevSelectedDevices,\n    //             {device_name:deviceName,device_ip:deviceIP}\n    //         ];\n    //     } else {\n    //         // Remove the unchecked device from the selectedDevice state\n    //         return prevSelectedDevices.filter((device) => device !== deviceName);\n    //     }\n    // });\n    if (isChecked) {\n      // Add the selected device to the selectedDevices state\n      const updatedDevices = [...selectedDevices, {\n        device_name: deviceName,\n        device_ip: deviceIP\n      }];\n      setSelectedDevices(updatedDevices);\n      //onSelectedDevicesChange(updatedDevices);\n    } else {\n      // Remove the unchecked device from the selectedDevices state\n      const updatedDevices = selectedDevices.filter(device => device.device_name !== deviceName);\n      setSelectedDevices(updatedDevices);\n      //onSelectedDevicesChange(updatedDevices);\n    }\n  };\n\n  useEffect(() => {\n    onSelectedDevicesChange(selectedDevices);\n  }, [selectedDevices]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"device-list\",\n    children: [errors != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-div\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" alert alert-danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-hovered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"PC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"IP address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: devices.length > 0 && devices.map((device, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-check-input device-checkbox\",\n                  type: \"checkbox\",\n                  onChange: handleSelect(device.device_name, device.device_ip)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: device.device_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: device.device_ip\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceList, \"uT5UfM6I05WkAJATehe7OAS12FI=\");\n_c = DeviceList;\nexport default DeviceList;\nvar _c;\n$RefreshReg$(_c, \"DeviceList\");","map":{"version":3,"names":["useState","useEffect","axios","getDevices","jsxDEV","_jsxDEV","DeviceList","_ref","_s","agent","onSelectedDevicesChange","devices","setDevices","errors","setErrors","message","setMessage","fetchDevices","this_devices","selectedDevices","setSelectedDevices","handleSelect","deviceName","deviceIP","event","isChecked","target","checked","updatedDevices","device_name","device_ip","filter","device","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","type","onChange","_c","$RefreshReg$"],"sources":["/Users/nc/Desktop/BOT/UI/src/Pages/selectDevice.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { getDevices } from \"../Repositories/deviceRepos\"\nconst DeviceList = ({agent,onSelectedDevicesChange}) => {\n    const [devices, setDevices] = useState([])\n    const [errors,setErrors] = useState([])\n    const [message,setMessage] = useState('')\n    const fetchDevices = async () => {\n        // try {\n        //     await axios.get('http://127.0.0.1:5000/getAllDevices').then(response => {\n        //         if (response.data.status === 200) {\n        //             const device = response.data.devices;\n        //             const devicesArray = Object.keys(device).map((key) => ({\n        //                 name: key,\n        //                 ...device[key],\n        //             }));\n        //             setDevices(devicesArray);\n        //         }\n        //     })\n        // }\n        // catch (error) {\n        //     setMessage('Cannot connect to server')\n        //     setErrors(error)\n        // }\n\n        const this_devices = await getDevices(agent);\n        setDevices(this_devices)\n\n    }\n\n    useEffect(() => {\n        fetchDevices()\n    }, [])\n\n    const [selectedDevices, setSelectedDevices] = useState([])\n\n    const handleSelect = (deviceName,deviceIP) => (event) => {\n        const isChecked = event.target.checked;\n\n        // setSelectedDevices((prevSelectedDevices) => {\n        //     if (isChecked) {\n        //         // Add the selected device to the selectedDevice state\n        //         return [...prevSelectedDevices,\n        //             {device_name:deviceName,device_ip:deviceIP}\n        //         ];\n        //     } else {\n        //         // Remove the unchecked device from the selectedDevice state\n        //         return prevSelectedDevices.filter((device) => device !== deviceName);\n        //     }\n        // });\n        if (isChecked) {\n            // Add the selected device to the selectedDevices state\n            const updatedDevices = [...selectedDevices,{device_name:deviceName,device_ip:deviceIP}];\n            setSelectedDevices(updatedDevices);\n            //onSelectedDevicesChange(updatedDevices);\n          } else {\n            // Remove the unchecked device from the selectedDevices state\n            const updatedDevices = selectedDevices.filter(\n              (device) => device.device_name!== deviceName\n            );\n            setSelectedDevices(updatedDevices);\n            //onSelectedDevicesChange(updatedDevices);\n          }\n      \n\n    };\n\n    useEffect(()=>{\n        onSelectedDevicesChange(selectedDevices)\n    },[selectedDevices])\n\n\n\n    return (\n        <div className=\"device-list\">\n            {\n                errors !=0 &&\n                <div className=\"alert-div\">\n                    <div className=\" alert alert-danger\">{message}</div>\n                </div>\n            }\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <table className=\"table table-hovered\">\n                        <thead>\n                            <tr>\n                                <th>Select</th>\n                                <th>PC</th>\n                                <th>IP address</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {\n                                devices.length > 0 && devices.map((device, index) => (\n                                    <tr key={index}>\n                                        <td>\n                                            <input className=\"form-check-input device-checkbox\" type=\"checkbox\" onChange={handleSelect(device.device_name,device.device_ip)} />\n                                        </td>\n                                        <th>\n                                            {device.device_name}\n                                        </th>\n                                        <td>\n                                            {device.device_ip}\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeviceList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}