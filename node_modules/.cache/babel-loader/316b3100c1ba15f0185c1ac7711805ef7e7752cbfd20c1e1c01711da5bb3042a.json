{"ast":null,"code":"import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport database from \"../firebase\";\nfunction generateID() {\n  const currentTime = Date.now().toString();\n  return 'PC' + currentTime;\n}\nconst agencyRef = agencyID => {\n  return doc(database, 'Agency', agencyID);\n};\nexport const createDevice = async (agencyID, deviceData) => {\n  try {\n    const agencyRef = doc(database, 'Agency', agencyID);\n    const deviceCollectionRef = collection(agencyRef, 'devices');\n    const deviceID = generateID();\n    const newData = {\n      ...deviceData,\n      device_id: deviceID\n    };\n    await setDoc(doc(deviceCollectionRef, deviceID), newData);\n    return true;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const retrieveDevice = async (agencyID, deviceID) => {\n  try {\n    const deviceRef = doc(collection(database, 'Agency', agencyID, 'devices'), deviceID);\n    const deviceDoc = await getDoc(deviceRef);\n    if (deviceDoc.exists()) {\n      const deviceData = deviceDoc.data();\n      return {\n        id: deviceData,\n        ...deviceData\n      };\n    } else {\n      throw new Error(\"Device not found\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getDevices = async agencyID => {\n  try {\n    const agencyRef = doc(collection(database, \"Agency\"), agencyID);\n    const agencySnapshot = await getDoc(agencyRef);\n    if (agencySnapshot.exists()) {\n      const agencyData = agencySnapshot.data();\n      const devicesData = agencyData.devices;\n\n      // Convert devicesData object into an array\n      const devicesArray = Object.keys(devicesData).map(deviceID => ({\n        id: deviceID,\n        ...devicesData[deviceID]\n      }));\n      console.log(devicesArray);\n      return devicesArray;\n    } else {\n      throw new Error('Agency not found');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","deleteDoc","getDoc","doc","setDoc","database","generateID","currentTime","Date","now","toString","agencyRef","agencyID","createDevice","deviceData","deviceCollectionRef","deviceID","newData","device_id","error","console","log","retrieveDevice","deviceRef","deviceDoc","exists","data","id","Error","getDevices","agencySnapshot","agencyData","devicesData","devices","devicesArray","Object","keys","map"],"sources":["/Users/nc/Desktop/BOT/UI/src/Repositories/deviceRepos.js"],"sourcesContent":["import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\"\nimport database from \"../firebase\"\n\nfunction generateID() {\n    const currentTime = Date.now().toString();\n    return 'PC' + currentTime;\n}\n\n\nconst agencyRef = (agencyID) => {\n    return doc(database, 'Agency', agencyID)\n\n}\n\nexport const createDevice = async (agencyID, deviceData) => {\n    try {\n        const agencyRef = doc(database, 'Agency', agencyID)\n        const deviceCollectionRef = collection(agencyRef, 'devices')\n        const deviceID = generateID()\n        const newData = { ...deviceData, device_id: deviceID }\n        await setDoc(doc(deviceCollectionRef, deviceID), newData)\n        return true\n    }\n    catch (error) {\n        console.log(error)\n    }\n}\n\nexport const retrieveDevice = async (agencyID, deviceID) => {\n    try {\n        const deviceRef = doc(collection(database, 'Agency', agencyID, 'devices'), deviceID)\n        const deviceDoc = await getDoc(deviceRef)\n\n        if (deviceDoc.exists()) {\n            const deviceData = deviceDoc.data();\n            return { id: deviceData, ...deviceData }\n        }\n        else {\n            throw new Error(\"Device not found\")\n        }\n\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getDevices = async (agencyID) => {\n    try {\n        const agencyRef = doc(collection(database, \"Agency\"), agencyID)\n        const agencySnapshot = await getDoc(agencyRef);\n\n        if (agencySnapshot.exists()) {\n            const agencyData = agencySnapshot.data();\n            const devicesData = agencyData.devices;\n\n            // Convert devicesData object into an array\n            const devicesArray = Object.keys(devicesData).map((deviceID) => ({\n                id: deviceID,\n                ...devicesData[deviceID],\n            }));\n            console.log(devicesArray)\n            return devicesArray;\n        } else {\n            throw new Error('Agency not found');\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}