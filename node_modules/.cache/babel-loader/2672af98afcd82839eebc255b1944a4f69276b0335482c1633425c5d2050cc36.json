{"ast":null,"code":"var _jsxFileName = \"/Users/nc/Desktop/BOT/UI/src/Components/form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = _ref => {\n  _s();\n  let {\n    formFields,\n    onSubmit,\n    errorMsg\n  } = _ref;\n  const [formData, setFormData] = useState({});\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    setValid(Object.values(formData).every(value => value !== \"\"));\n  }, [formData]);\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const errors = [];\n    formFields.forEach(field => {\n      if (!formData[field.name] || formData[field.name] === \"\") {\n        errors.push(`${field.label} is required`);\n      }\n    });\n    return errors;\n  };\n  const formSubmit = event => {\n    event.preventDefault();\n    const errors = validateForm();\n    setValid(errors.length === 0);\n    errorMsg(errors);\n    if (errors.length === 0) {\n      onSubmit(formData);\n      document.getElementById(\"closeModal\").click();\n      event.target.reset();\n      setFormData({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: valid ? 'collapse' : '',\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"text-danger\",\n          children: errorMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmit,\n        autoComplete: \"off\",\n        children: [formFields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: field.id,\n            className: \"form-label\",\n            children: field.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this),\n          // field.type === 'input'?\n          // (<input type={field.type} classname=\"form-control\" id={field.id}/>):\n          field.type === 'select' ? /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-select\",\n            name: field.name,\n            onChange: handleInputChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), field.options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: field.type,\n            name: field.name,\n            className: \"form-control\",\n            id: field.id,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-dark\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"O9cRFeGoL4PnUjoJoWebBSEAwcI=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Form","_ref","_s","formFields","onSubmit","errorMsg","formData","setFormData","valid","setValid","Object","values","every","value","handleInputChange","event","name","target","prevFormData","validateForm","errors","forEach","field","push","label","formSubmit","preventDefault","length","document","getElementById","click","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","map","htmlFor","id","type","onChange","options","option","_c","$RefreshReg$"],"sources":["/Users/nc/Desktop/BOT/UI/src/Components/form.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Form = ({ formFields, onSubmit, errorMsg }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [valid, setValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValid(Object.values(formData).every((value) => value !== \"\"));\r\n  }, [formData]);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = [];\r\n    formFields.forEach((field) => {\r\n      if (!formData[field.name] || formData[field.name] === \"\") {\r\n        errors.push(`${field.label} is required`);\r\n      }\r\n    });\r\n    return errors;\r\n  };\r\n\r\n  const formSubmit = (event) => {\r\n    event.preventDefault();\r\n    const errors = validateForm();\r\n    setValid(errors.length === 0);\r\n    errorMsg(errors);\r\n\r\n    if (errors.length === 0) {\r\n      onSubmit(formData);\r\n      document.getElementById(\"closeModal\").click();\r\n      event.target.reset();\r\n      setFormData({});\r\n    }\r\n  };\r\n   \r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n               <div className={valid?'collapse':''}>\r\n                <ul className=\"text-danger\">\r\n                 {\r\n                    errorMsg\r\n                 }\r\n                </ul>\r\n               </div>\r\n                <form onSubmit={formSubmit} autoComplete=\"off\">\r\n                    {\r\n                        formFields.map((field) =>\r\n                            <div className=\"mb-3\">\r\n                                <label htmlFor={field.id} className=\"form-label\">{field.label}</label>\r\n                                {\r\n                                    // field.type === 'input'?\r\n                                    // (<input type={field.type} classname=\"form-control\" id={field.id}/>):\r\n                                    field.type === 'select'?\r\n                                    (<select className=\"form-select\" name={field.name} onChange={handleInputChange}>\r\n                                        <option value=\"\">Please Select</option>\r\n                                        {field.options.map((option)=>\r\n                                            <option key={option.value} value={option.value} >{option.label}</option>\r\n                                        )}\r\n                                    </select>):\r\n                                    (<input type={field.type} name={field.name} className=\"form-control\" id={field.id}  onChange={handleInputChange}/>)\r\n\r\n                                }\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    <div className=\"text-center\">\r\n                         <button className=\"btn btn-dark\">Submit</button>\r\n                    </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}