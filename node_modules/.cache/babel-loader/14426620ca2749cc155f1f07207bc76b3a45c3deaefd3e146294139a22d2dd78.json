{"ast":null,"code":"import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\";\nimport database from \"../firebase\";\n\n//declared collection\nconst accountCollectionRef = collection(database, 'Accounts');\nexport const getAllAcc = async () => {\n  try {\n    const data = await getDocs(accountCollectionRef);\n    const account = data.docs.map(doc => ({\n      ...doc.data(),\n      id: doc.id\n    }));\n    console.log(account);\n    return account;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const retrieveAcc = async accountID => {\n  try {\n    const accountRef = doc(accountCollectionRef, accountID);\n    const accountDoc = await getDoc(accountRef);\n    if (accountDoc.exists()) {\n      return {\n        id: accountDoc.id,\n        ...accountDoc.data()\n      };\n    }\n  } catch (error) {\n    throw new Error(\"Failed to retrieve account\");\n  }\n};\nexport const createAcc = async accountData => {\n  try {\n    const accountRef = doc(accountCollectionRef, accountData.id);\n    await setDoc(accountRef, accountData);\n    return true;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateAcc = async (accountID, accountData) => {};\nexport const deleteAcc = async accountID => {};","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","deleteDoc","getDoc","doc","setDoc","database","accountCollectionRef","getAllAcc","data","account","docs","map","id","console","log","error","retrieveAcc","accountID","accountRef","accountDoc","exists","Error","createAcc","accountData","updateAcc","deleteAcc"],"sources":["/Users/nc/Desktop/BOT/UI/src/Repositories/accountRepos.js"],"sourcesContent":["import { collection, addDoc, getDocs, updateDoc, deleteDoc, getDoc, doc, setDoc } from \"firebase/firestore\"\nimport database from \"../firebase\"\n\n//declared collection\nconst accountCollectionRef = collection(database,'Accounts')\nexport const getAllAcc = async() =>{\n    try{\n        const data = await getDocs(accountCollectionRef);\n        const account = data.docs.map((doc)=>({...doc.data(),id:doc.id}));\n        console.log(account)\n        return account\n    }catch(error){\n        console.log(error)\n    }\n    \n}\n\nexport const retrieveAcc = async(accountID) =>{\n    try{\n        const accountRef = doc(accountCollectionRef,accountID)\n        const accountDoc = await getDoc(accountRef)\n        if(accountDoc.exists()){\n            return {id:accountDoc.id,...accountDoc.data()};\n        }\n    }catch(error){\n        throw new Error(\"Failed to retrieve account\")\n    }\n}\n\nexport const createAcc = async (accountData) =>{\n    try{\n        const accountRef = doc(accountCollectionRef,accountData.id)\n        await setDoc(accountRef,accountData)\n        return true\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const updateAcc = async(accountID,accountData)=>{\n\n}\n\nexport const deleteAcc = async(accountID) =>{\n\n\n}\n\n\n\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAC3G,OAAOC,QAAQ,MAAM,aAAa;;AAElC;AACA,MAAMC,oBAAoB,GAAGT,UAAU,CAACQ,QAAQ,EAAC,UAAU,CAAC;AAC5D,OAAO,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAU;EAC/B,IAAG;IACC,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAACO,oBAAoB,CAAC;IAChD,MAAMG,OAAO,GAAGD,IAAI,CAACE,IAAI,CAACC,GAAG,CAAER,GAAG,KAAI;MAAC,GAAGA,GAAG,CAACK,IAAI,CAAC,CAAC;MAACI,EAAE,EAACT,GAAG,CAACS;IAAE,CAAC,CAAC,CAAC;IACjEC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;IACpB,OAAOA,OAAO;EAClB,CAAC,QAAMM,KAAK,EAAC;IACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AAEJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAMC,SAAS,IAAI;EAC1C,IAAG;IACC,MAAMC,UAAU,GAAGf,GAAG,CAACG,oBAAoB,EAACW,SAAS,CAAC;IACtD,MAAME,UAAU,GAAG,MAAMjB,MAAM,CAACgB,UAAU,CAAC;IAC3C,IAAGC,UAAU,CAACC,MAAM,CAAC,CAAC,EAAC;MACnB,OAAO;QAACR,EAAE,EAACO,UAAU,CAACP,EAAE;QAAC,GAAGO,UAAU,CAACX,IAAI,CAAC;MAAC,CAAC;IAClD;EACJ,CAAC,QAAMO,KAAK,EAAC;IACT,MAAM,IAAIM,KAAK,CAAC,4BAA4B,CAAC;EACjD;AACJ,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAI;EAC3C,IAAG;IACC,MAAML,UAAU,GAAGf,GAAG,CAACG,oBAAoB,EAACiB,WAAW,CAACX,EAAE,CAAC;IAC3D,MAAMR,MAAM,CAACc,UAAU,EAACK,WAAW,CAAC;IACpC,OAAO,IAAI;EACf,CAAC,QAAMR,KAAK,EAAC;IACTF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,OAAO,MAAMS,SAAS,GAAG,MAAAA,CAAMP,SAAS,EAACM,WAAW,KAAG,CAEvD,CAAC;AAED,OAAO,MAAME,SAAS,GAAG,MAAMR,SAAS,IAAI,CAG5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}