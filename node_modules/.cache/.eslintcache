[{"/Users/nc/Desktop/BOT/UI/src/index.js":"1","/Users/nc/Desktop/BOT/UI/src/App.js":"2","/Users/nc/Desktop/BOT/UI/src/reportWebVitals.js":"3","/Users/nc/Desktop/BOT/UI/src/Pages/test.jsx":"4","/Users/nc/Desktop/BOT/UI/src/Pages/testcase.jsx":"5","/Users/nc/Desktop/BOT/UI/src/Pages/header.jsx":"6","/Users/nc/Desktop/BOT/UI/src/Components/modal.jsx":"7","/Users/nc/Desktop/BOT/UI/src/Components/form.jsx":"8","/Users/nc/Desktop/BOT/UI/src/Pages/account.jsx":"9","/Users/nc/Desktop/BOT/UI/src/newheader.jsx":"10","/Users/nc/Desktop/BOT/UI/src/Pages/bot.jsx":"11","/Users/nc/Desktop/BOT/UI/src/Pages/device.jsx":"12","/Users/nc/Desktop/BOT/UI/src/Pages/selectDevice.jsx":"13","/Users/nc/Desktop/BOT/UI/src/firebase.js":"14","/Users/nc/Desktop/BOT/UI/src/Repositories/accountRepos.js":"15","/Users/nc/Desktop/BOT/UI/src/Pages/agencyDeviceManagement.jsx":"16","/Users/nc/Desktop/BOT/UI/src/Pages/agency.jsx":"17","/Users/nc/Desktop/BOT/UI/src/Components/loading.jsx":"18","/Users/nc/Desktop/BOT/UI/src/Repositories/agencyRepos.js":"19","/Users/nc/Desktop/BOT/UI/src/Repositories/deviceRepos.js":"20","/Users/nc/Desktop/BOT/UI/src/Pages/selectAccount.jsx":"21","/Users/nc/Desktop/BOT/UI/src/Pages/login.jsx":"22","/Users/nc/Desktop/BOT/UI/src/Pages/logout.jsx":"23","/Users/nc/Desktop/BOT/UI/src/Components/alert.jsx":"24","/Users/nc/Desktop/BOT/UI/src/Pages/Actions/ImageComment.jsx":"25","/Users/nc/Desktop/BOT/UI/src/Pages/Actions/likePost.jsx":"26","/Users/nc/Desktop/BOT/UI/src/Pages/Actions/comment.jsx":"27"},{"size":536,"mtime":1688740559807,"results":"28","hashOfConfig":"29"},{"size":2190,"mtime":1688743718460,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1683822208000,"results":"31","hashOfConfig":"29"},{"size":6610,"mtime":1686304287236,"results":"32","hashOfConfig":"29"},{"size":7064,"mtime":1683822208000,"results":"33","hashOfConfig":"29"},{"size":1746,"mtime":1688898674147,"results":"34","hashOfConfig":"29"},{"size":1308,"mtime":1688048327918,"results":"35","hashOfConfig":"29"},{"size":4626,"mtime":1689250522267,"results":"36","hashOfConfig":"29"},{"size":9270,"mtime":1689178990811,"results":"37","hashOfConfig":"29"},{"size":11178,"mtime":1686304228683,"results":"38","hashOfConfig":"29"},{"size":9033,"mtime":1689687013673,"results":"39","hashOfConfig":"29"},{"size":8865,"mtime":1689251951105,"results":"40","hashOfConfig":"29"},{"size":5234,"mtime":1688286533464,"results":"41","hashOfConfig":"29"},{"size":801,"mtime":1688026218756,"results":"42","hashOfConfig":"29"},{"size":2755,"mtime":1689179015127,"results":"43","hashOfConfig":"29"},{"size":283,"mtime":1688048400694,"results":"44","hashOfConfig":"29"},{"size":5515,"mtime":1688296752694,"results":"45","hashOfConfig":"29"},{"size":191,"mtime":1688038158998,"results":"46","hashOfConfig":"29"},{"size":2211,"mtime":1688746640894,"results":"47","hashOfConfig":"29"},{"size":2745,"mtime":1689251920009,"results":"48","hashOfConfig":"29"},{"size":3145,"mtime":1688688989958,"results":"49","hashOfConfig":"29"},{"size":6074,"mtime":1688963013679,"results":"50","hashOfConfig":"29"},{"size":255,"mtime":1688743728645,"results":"51","hashOfConfig":"29"},{"size":606,"mtime":1688963284964,"results":"52","hashOfConfig":"29"},{"size":4185,"mtime":1689501126512,"results":"53","hashOfConfig":"29"},{"size":1355,"mtime":1689925320615,"results":"54","hashOfConfig":"29"},{"size":2172,"mtime":1689867012977,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"uga0a5",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"59"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nc/Desktop/BOT/UI/src/index.js",[],[],[],"/Users/nc/Desktop/BOT/UI/src/App.js",["144","145"],[],"/Users/nc/Desktop/BOT/UI/src/reportWebVitals.js",[],[],"/Users/nc/Desktop/BOT/UI/src/Pages/test.jsx",["146","147","148","149","150"],[],"import { useState, useEffect } from \"react\";\r\n\r\nconst Test = () => {\r\n\r\n    const [selected, setSelected] = useState([])\r\n    const [isSelect, setSelect] = useState(false)\r\n    let row = 10, i = 1\r\n    const [data, setData] = useState()\r\n    const [progress, setProgress] = useState(0)\r\n    const list = []\r\n    useEffect(() => {\r\n        for (i; i <= row; i++) {\r\n            list.push(\r\n                <tr>\r\n                    <td>{i}</td>\r\n                    <td>LXI_{i}</td>\r\n                    <td>This is test case {i}</td>\r\n                    <td>\r\n                        <div id={`teststatus_${i}`}>\r\n                            {/* <span className=\"badge bg-primary test-status\">To Do</span> */}\r\n                            {/*<span className=\"text-success\"><i className=\"bi bi-check-lg\"></i></span>*/}\r\n                            <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\r\n                                <span class=\"visually-hidden\">Loading...</span>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td>\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input test-cases-checkbox\" type=\"checkbox\" value={false} id={i} />\r\n\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            )\r\n\r\n        }\r\n        setData(list)\r\n    }, [])\r\n\r\n    const runTest = () => {\r\n        let value = 10\r\n        let result = progress + value\r\n        if (result <= 100) {\r\n            setProgress(result)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const progressBar = document.querySelector('.progress-bar');\r\n\r\n        if (progress <= 100) {\r\n            progressBar.style.width = `${progress}%`;\r\n            progressBar.setAttribute('aria-valuenow', progress);\r\n            progressBar.textContent = `${progress}%`;\r\n\r\n        }\r\n        if (progress === 100) {\r\n            progressBar.className = 'progress-bar bg-success'\r\n        }\r\n\r\n    }, [progress]);\r\n\r\n    function selectAll(event) {\r\n        const target = event.target\r\n        const value = target.checked\r\n        const tc_checkbox = document.querySelectorAll('.test-cases-checkbox')\r\n        tc_checkbox.forEach((testCaseBox) => {\r\n            testCaseBox.checked = value\r\n            if (value)\r\n                //Modify to if value is true and update the selected test cases state array\r\n                console.log(testCaseBox.id)\r\n        })\r\n\r\n    }\r\n    // useEffect(()=>{\r\n    //     let isSelectAll = document.getElementById('checkAll').checked\r\n    //     let tc_checkbox = document.querySelectorAll('.test-cases-checkbox')\r\n    //     setSelect(isSelectAll)\r\n    // },[isSelectAll])\r\n\r\n\r\n    return (\r\n        <div className=\"container-md\">\r\n             <div className=\"filter\" id=\"filter\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <label htmlFor=\"#type\" className=\"form-label\">Network</label>\r\n                            </div>\r\n                            <div className=\"col-8\">\r\n                                <select name=\"type\" id=\"type\" className=\"form-select\">\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"Keysight\">Keysight Network</option>\r\n                                    <option value=\"DLAN\">Direct LAN</option>\r\n                                    <option value=\"DHCPv4\">DHCP (IPv4)</option>\r\n                                    <option value=\"DHCPv6\">DHCP (IPv6)</option>\r\n                                    <option value=\"private\">Private (Switch)</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-6\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\">\r\n                                <label htmlFor=\"#lxi-version\" className=\"form-label\">LXI Version</label>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <select name=\"version\" id=\"version\" className=\"form-select\">\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"1.5\">1.5</option>\r\n                                    <option value=\"1.6\">1.6</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-2\">\r\n                        <div className=\"row\">\r\n                            <button className=\"col-6 btn btn-outline-primary\"><i className=\"bi bi-filter\"></i> Filter</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <br /><hr /><br />\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    Select Test Cases\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>No.</th>\r\n                                <th>Test Cases</th>\r\n                                <th width=\"50%\">Description</th>\r\n                                <th>Status</th>\r\n                                <th>Action  <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"checkAll\" onChange={selectAll} /></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data}\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-dark\" id=\"RunTest\" onClick={runTest}>Run</button>\r\n                    </div>\r\n                    <br /><br />\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar\" role=\"progressbar\" Style={`width: ${progress}%;`}\r\n                            aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">{progress}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Test",[],"/Users/nc/Desktop/BOT/UI/src/Pages/testcase.jsx",["151","152","153"],[],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Modal from \"../Components/modal\";\r\nimport Form from \"../Components/form\";\r\nconst TestCaseManagement = () => {\r\n    const [cases, setCases] = useState()\r\n    const form = [\r\n       \r\n        {name:\"network\",type:\"select\",label:\"Network\",id:\"network\",options:[\r\n            {value:\"Keysight Network\",label:\"Keysight Network\"},\r\n            {value:\"DLAN\",label:\"DLAN\"},\r\n            {value:\"DHCPv4\",label:\"DHCP (IPv4)\"},\r\n            {value:\"DHCPv6\",label:\"DHCP (IPv6)\"},\r\n            {value:\"private\",label:\"Private (Switch)\"}\r\n        ]},\r\n        {name:\"lxi-version\",type:\"select\",label:\"LXI-version\",id:\"lxi-version\",options:[\r\n            {value:\"1.5\",label:\"1.5\"},\r\n            {value:\"1.6\",label:\"1.6\"}\r\n        ]},\r\n         {name:\"os\",type:\"select\",label:\"Operating System\",id:\"os\",options:[\r\n            {value:\"All\",label:\"ALL\"},\r\n            {value:\"Windows\",label:\"Windows\"},\r\n            {value:\"Linux\",label:\"Linux\"}\r\n         ]},\r\n         {name:\"tc_name\",type:\"text\",label:\"Test Case Name\",id:\"tc_name\"},\r\n         {name:\"description\",type:\"text\",label:\"Test Description\",id:\"description\"},\r\n         {name:\"function\",type:\"text\",label:\"Pointed Function\",id:\"function\"},\r\n        \r\n    ]\r\n\r\n    return (\r\n        <div className=\"container-lg\">\r\n            {/* Modal Tag place here */}\r\n            <Modal title=\"Add Test Case\" content={<Form formFields={form}/>}/>\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">Test Cases</div>\r\n                <div className=\"card-body\">\r\n                    <br />\r\n\r\n                    <div className=\"text-start\">\r\n                    <button type=\"button\" class=\"btn btn-outline-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#modal\">\r\n                            <i className=\"bi bi-plus-circle\"></i> Test Case\r\n                        </button>\r\n                    </div>\r\n                    <br />\r\n                    <hr />\r\n                    <br />\r\n                    <div className=\"filter\" id=\"filter\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-3\">\r\n                                        <label htmlFor=\"#type\" className=\"form-label\">Network</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        <select name=\"type\" id=\"type\" className=\"form-select\">\r\n                                            <option value=\"all\">All</option>\r\n                                            <option value=\"Keysight\">Keysight Network</option>\r\n                                            <option value=\"DLAN\">Direct LAN</option>\r\n                                            <option value=\"DHCPv4\">DHCP (IPv4)</option>\r\n                                            <option value=\"DHCPv6\">DHCP (IPv6)</option>\r\n                                            <option value=\"private\">Private (Switch)</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                            <div className=\"col-3\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4\">\r\n                                        <label htmlFor=\"#lxi-version\" className=\"form-label\">LXI Version</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        <select name=\"version\" id=\"version\" className=\"form-select\">\r\n                                            <option value=\"all\">All</option>\r\n                                            <option value=\"1.5\">1.5</option>\r\n                                            <option value=\"1.6\">1.6</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-5\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4\">\r\n                                        <label htmlFor=\"#os\" className=\"form-label\">Operating System</label>\r\n                                    </div>\r\n                                    <div className=\"col-8\">\r\n                                        <select name=\"os\" id=\"os\" className=\"form-select\">\r\n                                            <option value=\"all\">All</option>\r\n                                            <option value=\"Windows\">Windows</option>\r\n                                            <option value=\"Linux\">Linux</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                           \r\n                        </div>\r\n                        <br /><br />\r\n                        <div className=\"row\">\r\n                            <div className=\"text-center\">\r\n                                <button className=\"btn btn-outline-primary\">\r\n                                    <i className=\"bi bi-filter\"></i> Filter\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <hr />\r\n                    <br />\r\n\r\n                    {/*Table*/}\r\n                    <table className=\"table table-borderless\">\r\n                        <thead className=\"table-dark\">\r\n                            <tr>\r\n                                <th>No.</th>\r\n                                <th>Test Case</th>\r\n                                <th>Description</th>\r\n                                <th>LXI Version</th>\r\n                                <th>OS</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>1</td>\r\n                                <td>TC_1.5_001</td>\r\n                                <td>Ensure Instrument IP is accessible</td>\r\n                                <td>1.5</td> \r\n                                <td>Windows and Linux</td>\r\n                                <td>\r\n                                    <button className=\"btn\">\r\n                                        <i className=\"bi bi-pencil\"></i>\r\n                                    </button>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TestCaseManagement","/Users/nc/Desktop/BOT/UI/src/Pages/header.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Components/modal.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Components/form.jsx",["154","155","156","157"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/account.jsx",["158","159","160","161","162","163"],[],"/Users/nc/Desktop/BOT/UI/src/newheader.jsx",["164","165","166","167","168","169","170","171","172","173","174","175"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/bot.jsx",["176","177","178","179"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/device.jsx",["180","181","182","183","184","185","186","187"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/selectDevice.jsx",["188","189","190","191","192","193","194","195"],[],"import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { getDevices } from \"../Repositories/deviceRepos\"\nconst DeviceList = ({ agent, onSelectedDevicesChange }) => {\n    const [devices, setDevices] = useState([])\n    const [errors, setErrors] = useState([])\n    const [message, setMessage] = useState('')\n    const [selectedDevices, setSelectedDevices] = useState([])\n    const [renderDevices, setRenderDevices] = useState()\n    const fetchDevices = async () => {\n        // try {\n        //     await axios.get('http://127.0.0.1:5000/getAllDevices').then(response => {\n        //         if (response.data.status === 200) {\n        //             const device = response.data.devices;\n        //             const devicesArray = Object.keys(device).map((key) => ({\n        //                 name: key,\n        //                 ...device[key],\n        //             }));\n        //             setDevices(devicesArray);\n        //         }\n        //     })\n        // }\n        // catch (error) {\n        //     setMessage('Cannot connect to server')\n        //     setErrors(error)\n        // }\n\n        try {\n            const this_devices = await getDevices(agent) \n            if(this_devices){ // this statement is to prevent set undefined data to device useState hooks\n                setDevices(this_devices)\n            }\n        }\n        catch (error) { \n            console.log(error)\n        }\n\n    }\n\n    useEffect(() => {\n        fetchDevices()\n        setSelectedDevices([])\n    }, [agent])\n\n    // useEffect(() => {\n    //     const render = devices.map((device, index) => (\n    //         <tr key={index}>\n    //             <td>\n    //                 <input className=\"form-check-input device-checkbox\" type=\"checkbox\" onChange={handleSelect(device.device_name, device.device_ip)} />\n    //             </td>\n    //             <th>\n    //                 {device.device_name}\n    //             </th>\n    //             <td>\n    //                 {device.device_ip}\n    //             </td>\n    //         </tr>\n    //     ))\n    //     setRenderDevices(render)\n    // }, [devices])\n\n\n\n    const handleSelect = (deviceName, deviceIP) => (event) => {\n        const isChecked = event.target.checked;\n\n        // setSelectedDevices((prevSelectedDevices) => {\n        //     if (isChecked) {\n        //         // Add the selected device to the selectedDevice state\n        //         return [...prevSelectedDevices,\n        //             {device_name:deviceName,device_ip:deviceIP}\n        //         ];\n        //     } else {\n        //         // Remove the unchecked device from the selectedDevice state\n        //         return prevSelectedDevices.filter((device) => device !== deviceName);\n        //     }\n        // });\n        if (isChecked) {\n            // Add the selected device to the selectedDevices state\n            const updatedDevices = [...selectedDevices, { device_name: deviceName, device_ip: deviceIP }];\n            setSelectedDevices(updatedDevices);\n            //onSelectedDevicesChange(updatedDevices);\n        } else {\n            // Remove the unchecked device from the selectedDevices state\n            const updatedDevices = selectedDevices.filter(\n                (device) => device.device_name !== deviceName\n            );\n            setSelectedDevices(updatedDevices);\n            //onSelectedDevicesChange(updatedDevices);\n        }\n\n\n    };\n\n    useEffect(() => {\n        onSelectedDevicesChange(selectedDevices)\n    }, [selectedDevices])\n\n\n\n    return (\n        <div className=\"device-list\">\n            {\n                errors != 0 &&\n                <div className=\"alert-div\">\n                    <div className=\" alert alert-danger\">{message}</div>\n                </div>\n            }\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <table className=\"table table-hovered\">\n                        <thead>\n                            <tr>\n                                <th>Select</th>\n                                <th>PC</th>\n                                <th>IP address</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {\n                              devices.map((device, index) => (\n                                    <tr key={index}>\n                                        <td>\n                                            <input className=\"form-check-input device-checkbox\" type=\"checkbox\" onChange={handleSelect(device.device_name,device.device_ip)} />\n                                        </td>\n                                        <th>\n                                            {device.device_name}\n                                        </th>\n                                        <td>\n                                            {device.device_ip}\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                           \n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DeviceList","/Users/nc/Desktop/BOT/UI/src/firebase.js",[],[],"/Users/nc/Desktop/BOT/UI/src/Repositories/accountRepos.js",["196","197","198","199"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/agencyDeviceManagement.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Pages/agency.jsx",["200","201","202","203","204","205"],[],"import { useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Form from \"../Components/form\"\nimport Modal from \"../Components/modal\"\nimport { createAgency, getAllAgents, deleteAgency, getAgent, updateAgent } from \"../Repositories/agencyRepos\"\nimport Device from \"./device\"\nimport loading from \"../Components/loading\"\nconst Agency = () => {\n    const agencyForm = [\n        { name: \"name\", type: \"text\", label: \"Agency Name\", id: 'agency_name' },\n\n    ]\n\n    const deviceForm = [\n        { name: \"device_name\", type: \"text\", label: \"Device Name\", id: 'device_name' },\n        { name: 'device_ip', type: \"text\", label: \"Device's IP\", id: 'device_ip' }\n    ]\n    const [agents, setAgents] = useState([])\n    const [thisAgent, setThisAgent] = useState([])\n    const [renderAgent, setRenderAgent] = useState()\n    const [isLoading, setIsLoading] = useState(false)\n    const [isAlertShow,setAlertShow] = useState(false)\n    const [errors,setErrors] = useState([])\n    const [message,setMessage] = useState()\n    useEffect(() => {\n        allAgency()\n    }, [])\n    const allAgency = async () => {\n        setIsLoading(true)\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 2000);\n        let data = await getAllAgents()\n        setAgents(data)\n        console.log(data)\n    }\n\n    const addAgent = async (data) => {\n        console.log(data)\n        await createAgency(data)\n        allAgency()\n\n    }\n\n    const deleteAgent = async (id) => {\n\n        let result = await deleteAgency(id)\n        if (result)\n        setMessage('Agent : '+id+' has been deleted')\n        setAlertShow(true)\n        setTimeout(()=>{\n            setAlertShow(false)\n        },3000)\n            allAgency()\n\n    }\n\n    const fetchAgent = async (agentID) => {\n\n        let this_agent = await getAgent(agentID)\n        setThisAgent(this_agent)\n\n\n    }\n\n    const editAgent = async (data) => {\n        let agentID = data.id\n        let update = await updateAgent(agentID, data)\n        if (update) { \n            setMessage(\"Agent updated\")        \n            allAgency()\n            setAlertShow(true)\n            setTimeout(() => {\n                setAlertShow(false)\n            }, 3000);\n        }\n    }\n\n    useEffect(() => {\n        let render = \"\"\n        //render = loading\n        if (isLoading) {\n            render = <tr><td colSpan=\"3\">{loading}</td></tr>\n        }\n        else {\n            render = agents.map((agent, index) => (\n                <tr key={index}>\n                    <td>{index + 1}</td>\n                    <td>{agent.name}</td>\n                    <td>\n                        {/* <a className=\"btn btn-sm\" href={`/device-management/${agent.id}`}><i className=\"bi bi-plus\"></i>&emsp;Manage Device</a> */}\n                        {/* <button className=\"btn btn-sm\" title=\"manage Device\"  data-bs-toggle=\"modal\" data-bs-target=\"#deviceModal\"><i className=\"bi bi-sliders\"></i>&emsp;Device</button> */}\n                        <button className=\"btn btn-sm\" title=\"Edit Agent\" onClick={() => fetchAgent(agent.id)} data-bs-toggle=\"modal\" data-bs-target=\"#editAgentModal\"><i className=\"bi bi-sliders\"></i>&emsp;Edit</button>\n                        &emsp;\n                        <button title=\"Delete Agent\" className=\"btn btn-sm\" onClick={() => deleteAgent(agent.id)}><i className=\"bi bi-trash text-danger\"></i>&emsp;Delete</button>\n                    </td>\n                </tr>\n            ))\n        }\n\n        setRenderAgent(render)\n    }, [agents,isLoading])\n\n\n    return (\n        <main className=\"main\" id=\"main\">\n            <div className=\"container-md\">\n                <Modal title=\"Add Agency\" modalID=\"addAgentModal\" content={<Form formFields={agencyForm} onSubmit={addAgent} data={\"\"} />} />\n                <Modal title=\"Edit Agency\" modalID=\"editAgentModal\" content={<Form formFields={agencyForm} onSubmit={editAgent} data={thisAgent} />} />\n                <div className=\"card\">\n                    <div className=\"card-header\">Agency Management</div>\n                    <div className=\"card-body\">\n                        <br />\n                        {isAlertShow && \n                            <div className=\"alertDiv\">\n                                <div className={errors.length != 0?'alert alert-danger':'alert alert-success'}>{message}</div>\n                            </div>\n                        }\n                        <div className=\"text-end\">\n                            <button type=\"button\" className=\"btn btn-outline-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addAgentModal\">\n                                <i className=\"bi bi-plus-circle\"></i> Agency\n                            </button>\n\n                        </div>\n                        <br /><br />\n\n                        <table className=\"table table-sm table-borderless\">\n                            <thead className=\"table-dark\">\n                                <tr>\n                                    <th>No.</th>\n                                    <th>Agent</th>\n                                    <th width=\"40%\">Action</th>\n\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {\n                                    renderAgent\n                                }\n\n\n                            </tbody>\n\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default Agency","/Users/nc/Desktop/BOT/UI/src/Components/loading.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Repositories/agencyRepos.js",["206"],[],"/Users/nc/Desktop/BOT/UI/src/Repositories/deviceRepos.js",["207","208","209","210"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/selectAccount.jsx",["211","212","213","214","215","216"],[],"import {useState,useEffect} from \"react\"\nimport { getAccountByDevice } from \"../Repositories/accountRepos\"\n\nconst AccountList = ({device,selectedAccountChangeHandling}) =>{\n    const [accounts,setAccounts] = useState([])\n    const [errors,setErrors] = useState([])\n    const [message,setMessage] = useState([])\n    const [selectedAccounts,setSelectedAccounts] = useState([])\n    const [renderAccounts,setRenderAccounts] = useState()\n\n    const filterAccount = async()=>{\n        try{\n            const getAccounts = await getAccountByDevice(device)\n            if(getAccounts){\n                setAccounts(getAccounts)\n            }\n            //setAccounts(getAccount)\n        }catch(error){}\n\n    }\n\n    // updateState by effect when device changed\n    useEffect(()=>{\n        filterAccount()\n        setSelectedAccounts([])\n    },[device])\n\n    const handleAccountSelect = (accountID) =>(event)=>{\n        const isChecked = event.target.checked\n       \n        if(isChecked){\n        \n             const updateSelectedAcc = [...selectedAccounts,{account_id:accountID}];\n             setSelectedAccounts(updateSelectedAcc)\n        }else{\n        \n            const updateSelectedAcc = selectedAccounts.filter(\n                (account)=>account.account_id !== accountID\n            );\n            setSelectedAccounts(updateSelectedAcc)\n            \n        }\n        \n        \n    };\n\n    useEffect(()=>{\n        selectedAccountChangeHandling(selectedAccounts)\n      \n    },[selectedAccounts])\n\n    //render\n\n    return (\n        <div className=\"account-list\">\n            {\n            errors.length !== 0 &&\n            <div className=\"alert-div\">\n\n                <div className=\"alert alert-danger\">{message}</div>\n            </div>\n            }\n\n            <div className=\"row\">\n\n                <div className=\"col-12\">\n\n                    <div className=\"table table-hovered\">\n                        <thead>\n                            <tr>\n                                <th>\n                                    Select Account(s)\n                                </th>\n                               \n                                <th>Account ID</th>\n                            </tr>\n\n\n                        </thead>\n\n                        <tbody>\n                            {\n                                accounts.map((account,index)=>(\n                                    <tr key={index}>\n                                       <td>\n                                            <input className=\"form-check-input acc-checkbox\" type=\"checkbox\" onChange={handleAccountSelect(account.account_id)} />\n                                        </td>\n                                       \n                                        <td>\n                                            {account.account_id}\n                                        </td>\n\n                                    </tr>    \n                                ))\n                            }\n                        </tbody>\n                    </div>\n                </div>\n            </div>\n        </div>    \n        \n    )\n\n}\n\nexport default AccountList","/Users/nc/Desktop/BOT/UI/src/Pages/login.jsx",["217","218"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/logout.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Components/alert.jsx",["219"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/Actions/ImageComment.jsx",["220"],[],"/Users/nc/Desktop/BOT/UI/src/Pages/Actions/likePost.jsx",[],[],"/Users/nc/Desktop/BOT/UI/src/Pages/Actions/comment.jsx",["221"],[],{"ruleId":"222","severity":1,"message":"223","line":11,"column":8,"nodeType":"224","messageId":"225","endLine":11,"endColumn":18},{"ruleId":"226","severity":1,"message":"227","line":50,"column":5,"nodeType":"228","endLine":50,"endColumn":18,"suggestions":"229"},{"ruleId":"222","severity":1,"message":"230","line":5,"column":12,"nodeType":"224","messageId":"225","endLine":5,"endColumn":20},{"ruleId":"222","severity":1,"message":"231","line":5,"column":22,"nodeType":"224","messageId":"225","endLine":5,"endColumn":33},{"ruleId":"222","severity":1,"message":"232","line":6,"column":12,"nodeType":"224","messageId":"225","endLine":6,"endColumn":20},{"ruleId":"222","severity":1,"message":"233","line":6,"column":22,"nodeType":"224","messageId":"225","endLine":6,"endColumn":31},{"ruleId":"226","severity":1,"message":"234","line":38,"column":8,"nodeType":"228","endLine":38,"endColumn":10,"suggestions":"235"},{"ruleId":"222","severity":1,"message":"236","line":2,"column":20,"nodeType":"224","messageId":"225","endLine":2,"endColumn":29},{"ruleId":"222","severity":1,"message":"237","line":6,"column":12,"nodeType":"224","messageId":"225","endLine":6,"endColumn":17},{"ruleId":"222","severity":1,"message":"238","line":6,"column":19,"nodeType":"224","messageId":"225","endLine":6,"endColumn":27},{"ruleId":"222","severity":1,"message":"239","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":14},{"ruleId":"222","severity":1,"message":"240","line":9,"column":12,"nodeType":"224","messageId":"225","endLine":9,"endColumn":17},{"ruleId":"222","severity":1,"message":"241","line":9,"column":19,"nodeType":"224","messageId":"225","endLine":9,"endColumn":27},{"ruleId":"222","severity":1,"message":"242","line":57,"column":14,"nodeType":"224","messageId":"225","endLine":57,"endColumn":24},{"ruleId":"222","severity":1,"message":"243","line":11,"column":12,"nodeType":"224","messageId":"225","endLine":11,"endColumn":18},{"ruleId":"222","severity":1,"message":"244","line":11,"column":20,"nodeType":"224","messageId":"225","endLine":11,"endColumn":29},{"ruleId":"222","severity":1,"message":"245","line":22,"column":12,"nodeType":"224","messageId":"225","endLine":22,"endColumn":25},{"ruleId":"222","severity":1,"message":"246","line":22,"column":26,"nodeType":"224","messageId":"225","endLine":22,"endColumn":42},{"ruleId":"226","severity":1,"message":"247","line":52,"column":8,"nodeType":"228","endLine":52,"endColumn":10,"suggestions":"248"},{"ruleId":"226","severity":1,"message":"249","line":75,"column":8,"nodeType":"228","endLine":75,"endColumn":24,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":24,"column":29,"nodeType":"253","endLine":24,"endColumn":86},{"ruleId":"251","severity":1,"message":"252","line":31,"column":29,"nodeType":"253","endLine":31,"endColumn":93},{"ruleId":"251","severity":1,"message":"252","line":39,"column":37,"nodeType":"253","endLine":39,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":97,"column":37,"nodeType":"253","endLine":97,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":106,"column":29,"nodeType":"253","endLine":106,"endColumn":93},{"ruleId":"251","severity":1,"message":"252","line":114,"column":37,"nodeType":"253","endLine":114,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":121,"column":37,"nodeType":"253","endLine":121,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":135,"column":37,"nodeType":"253","endLine":135,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":149,"column":37,"nodeType":"253","endLine":149,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":163,"column":37,"nodeType":"253","endLine":163,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":172,"column":29,"nodeType":"253","endLine":172,"endColumn":127},{"ruleId":"251","severity":1,"message":"252","line":216,"column":37,"nodeType":"253","endLine":216,"endColumn":97},{"ruleId":"222","severity":1,"message":"254","line":14,"column":27,"nodeType":"224","messageId":"225","endLine":14,"endColumn":43},{"ruleId":"226","severity":1,"message":"247","line":37,"column":8,"nodeType":"228","endLine":37,"endColumn":10,"suggestions":"255"},{"ruleId":"226","severity":1,"message":"256","line":72,"column":8,"nodeType":"228","endLine":72,"endColumn":24,"suggestions":"257"},{"ruleId":"226","severity":1,"message":"258","line":117,"column":7,"nodeType":"228","endLine":117,"endColumn":13,"suggestions":"259"},{"ruleId":"222","severity":1,"message":"260","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"261","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":22},{"ruleId":"222","severity":1,"message":"244","line":14,"column":20,"nodeType":"224","messageId":"225","endLine":14,"endColumn":29},{"ruleId":"222","severity":1,"message":"262","line":22,"column":12,"nodeType":"224","messageId":"225","endLine":22,"endColumn":25},{"ruleId":"222","severity":1,"message":"254","line":22,"column":27,"nodeType":"224","messageId":"225","endLine":22,"endColumn":43},{"ruleId":"222","severity":1,"message":"263","line":25,"column":12,"nodeType":"224","messageId":"225","endLine":25,"endColumn":24},{"ruleId":"222","severity":1,"message":"264","line":25,"column":26,"nodeType":"224","messageId":"225","endLine":25,"endColumn":41},{"ruleId":"226","severity":1,"message":"265","line":30,"column":8,"nodeType":"228","endLine":30,"endColumn":10,"suggestions":"266"},{"ruleId":"222","severity":1,"message":"260","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":13},{"ruleId":"222","severity":1,"message":"244","line":6,"column":20,"nodeType":"224","messageId":"225","endLine":6,"endColumn":29},{"ruleId":"222","severity":1,"message":"267","line":7,"column":21,"nodeType":"224","messageId":"225","endLine":7,"endColumn":31},{"ruleId":"222","severity":1,"message":"268","line":9,"column":12,"nodeType":"224","messageId":"225","endLine":9,"endColumn":25},{"ruleId":"222","severity":1,"message":"269","line":9,"column":27,"nodeType":"224","messageId":"225","endLine":9,"endColumn":43},{"ruleId":"226","severity":1,"message":"247","line":43,"column":8,"nodeType":"228","endLine":43,"endColumn":15,"suggestions":"270"},{"ruleId":"226","severity":1,"message":"271","line":97,"column":8,"nodeType":"228","endLine":97,"endColumn":25,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":104,"column":24,"nodeType":"275","messageId":"276","endLine":104,"endColumn":26},{"ruleId":"222","severity":1,"message":"277","line":1,"column":22,"nodeType":"224","messageId":"225","endLine":1,"endColumn":28},{"ruleId":"222","severity":1,"message":"278","line":1,"column":39,"nodeType":"224","messageId":"225","endLine":1,"endColumn":48},{"ruleId":"222","severity":1,"message":"279","line":24,"column":19,"nodeType":"224","messageId":"225","endLine":24,"endColumn":29},{"ruleId":"280","severity":1,"message":"281","line":89,"column":13,"nodeType":"282","messageId":"283","endLine":89,"endColumn":44},{"ruleId":"222","severity":1,"message":"239","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"284","line":6,"column":8,"nodeType":"224","messageId":"225","endLine":6,"endColumn":14},{"ruleId":"222","severity":1,"message":"285","line":14,"column":11,"nodeType":"224","messageId":"225","endLine":14,"endColumn":21},{"ruleId":"222","severity":1,"message":"244","line":23,"column":19,"nodeType":"224","messageId":"225","endLine":23,"endColumn":28},{"ruleId":"226","severity":1,"message":"286","line":102,"column":8,"nodeType":"228","endLine":102,"endColumn":26,"suggestions":"287"},{"ruleId":"273","severity":1,"message":"274","line":116,"column":63,"nodeType":"275","messageId":"276","endLine":116,"endColumn":65},{"ruleId":"222","severity":1,"message":"277","line":1,"column":21,"nodeType":"224","messageId":"225","endLine":1,"endColumn":27},{"ruleId":"222","severity":1,"message":"277","line":1,"column":22,"nodeType":"224","messageId":"225","endLine":1,"endColumn":28},{"ruleId":"222","severity":1,"message":"278","line":1,"column":39,"nodeType":"224","messageId":"225","endLine":1,"endColumn":48},{"ruleId":"222","severity":1,"message":"288","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":18},{"ruleId":"222","severity":1,"message":"289","line":11,"column":7,"nodeType":"224","messageId":"225","endLine":11,"endColumn":16},{"ruleId":"222","severity":1,"message":"244","line":6,"column":19,"nodeType":"224","messageId":"225","endLine":6,"endColumn":28},{"ruleId":"222","severity":1,"message":"267","line":7,"column":20,"nodeType":"224","messageId":"225","endLine":7,"endColumn":30},{"ruleId":"222","severity":1,"message":"290","line":9,"column":12,"nodeType":"224","messageId":"225","endLine":9,"endColumn":26},{"ruleId":"222","severity":1,"message":"291","line":9,"column":27,"nodeType":"224","messageId":"225","endLine":9,"endColumn":44},{"ruleId":"226","severity":1,"message":"292","line":26,"column":7,"nodeType":"228","endLine":26,"endColumn":15,"suggestions":"293"},{"ruleId":"226","severity":1,"message":"294","line":50,"column":7,"nodeType":"228","endLine":50,"endColumn":25,"suggestions":"295"},{"ruleId":"222","severity":1,"message":"296","line":6,"column":12,"nodeType":"224","messageId":"225","endLine":6,"endColumn":21},{"ruleId":"222","severity":1,"message":"297","line":6,"column":22,"nodeType":"224","messageId":"225","endLine":6,"endColumn":34},{"ruleId":"226","severity":1,"message":"298","line":11,"column":19,"nodeType":"299","endLine":11,"endColumn":24},{"ruleId":"222","severity":1,"message":"236","line":1,"column":20,"nodeType":"224","messageId":"225","endLine":1,"endColumn":29},{"ruleId":"226","severity":1,"message":"300","line":34,"column":7,"nodeType":"228","endLine":34,"endColumn":41,"suggestions":"301"},"no-unused-vars","'Management' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validateAgentID'. Either include it or remove the dependency array.","ArrayExpression",["302"],"'selected' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'isSelect' is assigned a value but never used.","'setSelect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'i', 'list', and 'row'. Either include them or remove the dependency array.",["303"],"'useEffect' is defined but never used.","'cases' is assigned a value but never used.","'setCases' is assigned a value but never used.","'Link' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'closeModal' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'accountDetail' is assigned a value but never used.","'setAccountDetail' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDevices'. Either include it or remove the dependency array.",["304"],"React Hook useEffect has a missing dependency: 'fetchAccountList'. Either include it or remove the dependency array.",["305"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setSelectedAgent' is assigned a value but never used.",["306"],"React Hook useEffect has a missing dependency: 'getAccounts'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has a missing dependency: 'wrappedPostLink'. Either include it or remove the dependency array.",["308"],"'axios' is defined but never used.","'getAllAgents' is defined but never used.","'selectedAgent' is assigned a value but never used.","'renderDevice' is assigned a value but never used.","'setRenderDevice' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getAllDevices'. Either include it or remove the dependency array.",["309"],"'setMessage' is assigned a value but never used.","'renderDevices' is assigned a value but never used.","'setRenderDevices' is assigned a value but never used.",["310"],"React Hook useEffect has a missing dependency: 'onSelectedDevicesChange'. Either include it or remove the dependency array. If 'onSelectedDevicesChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["311"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'addDoc' is defined but never used.","'updateDoc' is defined but never used.","'accountObj' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'Device' is defined but never used.","'deviceForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'deleteAgent'. Either include it or remove the dependency array.",["312"],"'useState' is defined but never used.","'agencyRef' is assigned a value but never used.","'renderAccounts' is assigned a value but never used.","'setRenderAccounts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterAccount'. Either include it or remove the dependency array.",["313"],"React Hook useEffect has a missing dependency: 'selectedAccountChangeHandling'. Either include it or remove the dependency array. If 'selectedAccountChangeHandling' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["314"],"'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","Assignments to the 'display' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","React Hook useEffect has a missing dependency: 'info'. Either include it or remove the dependency array.",["315"],{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"320","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [currentPath, validateAgentID]",{"range":"343","text":"344"},"Update the dependencies array to be: [i, list, row]",{"range":"345","text":"346"},"Update the dependencies array to be: [fetchDevices]",{"range":"347","text":"348"},"Update the dependencies array to be: [fetchAccountList, selectedDevice]",{"range":"349","text":"350"},{"range":"351","text":"348"},"Update the dependencies array to be: [getAccounts, selectedDevice]",{"range":"352","text":"353"},"Update the dependencies array to be: [text, wrappedPostLink]",{"range":"354","text":"355"},"Update the dependencies array to be: [getAllDevices]",{"range":"356","text":"357"},"Update the dependencies array to be: [agent, fetchDevices]",{"range":"358","text":"359"},"Update the dependencies array to be: [onSelectedDevicesChange, selectedDevices]",{"range":"360","text":"361"},"Update the dependencies array to be: [agents, deleteAgent, isLoading]",{"range":"362","text":"363"},"Update the dependencies array to be: [device, filterAccount]",{"range":"364","text":"365"},"Update the dependencies array to be: [selectedAccountChangeHandling, selectedAccounts]",{"range":"366","text":"367"},"Update the dependencies array to be: [comment, data.accounts, data.posts, info]",{"range":"368","text":"369"},[1446,1459],"[currentPath, validateAgentID]",[1446,1448],"[i, list, row]",[1666,1668],"[fetchDevices]",[2168,2184],"[fetchAccountList, selectedDevice]",[1404,1406],[2238,2254],"[getAccounts, selectedDevice]",[3479,3485],"[text, wrappedPostLink]",[1088,1090],"[getAllDevices]",[1525,1532],"[agent, fetchDevices]",[3507,3524],"[onSelectedDevicesChange, selectedDevices]",[3495,3513],"[agents, deleteAgent, isLoading]",[834,842],"[device, filterAccount]",[1477,1495],"[selectedAccountChangeHandling, selectedAccounts]",[845,879],"[comment, data.accounts, data.posts, info]"]